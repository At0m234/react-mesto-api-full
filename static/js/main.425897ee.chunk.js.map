{"version":3,"sources":["images/logo_mesto_white.svg","components/Header.js","contexts/CurrentUserContext.js","components/Card.js","components/Main.js","components/Footer.js","utils/Api.js","components/ImagePopup.js","components/PopupWithForm.js","components/AddPlacePopup.js","components/SuggestionPopup.js","components/ProtectedRoute.js","utils/constants.js","components/Login.js","utils/cardsAuth.js","components/Register.js","images/success.svg","images/fail.svg","components/InfoTooltip.js","components/app.js","serviceWorker.js","index.js"],"names":["Header","props","history","useHistory","path","className","src","logo","alt","onClick","push","userdata","email","onSignOut","CurrentUserContext","React","createContext","Card","currentUser","useContext","cardDeleteButtonClassName","card","owner","_id","onSelectCurrentCard","onDelete","aria-label","onSelectCard","link","name","Main","id","style","backgroundImage","avatar","profession","onAddPlace","type","cards","map","key","onCardLike","Footer","Api","url","authorization","this","_url","_token","_headers","token","additionalUrl","optionsObj","fetch","then","res","ok","json","Promise","reject","status","_getResponseData","headers","formData","method","body","JSON","stringify","title","place","cardId","ImagePopup","isOpen","e","target","classList","contains","onClose","handleClose","chosenCard","PopupWithForm","onOverlayClose","onSubmit","action","noValidate","children","AddPlacePopup","editTitle","useRef","editPlace","ref","required","placeholder","minLength","maxLength","preventDefault","current","value","handleSubmit","SuggestionPopup","selectedCard","ProtectedRoute","Component","component","isLogged","to","BASE_URL","Login","useState","username","setUsername","password","setPassword","data","localStorage","setItem","jwt","catch","err","console","log","cardsAuth","setUserLocalData","setMyApi","tokenCheck","setMessage","onChange","pattern","Register","setEmail","setInfoTooltipOpen","InfoTooltip","image","fail","message","success","infoTooltipOpen","closeinfoTooltip","App","isAddPlacePopupOpen","setIsAddPlacePopupOpen","isImagePopupOpen","setIsImagePopupOpen","setSelectedCard","isSuggestionOpen","setSuggestionOpen","setCurrentUser","setCards","setLogged","userData","setUserData","setToken","isRefreshed","setIsRefreshed","getItem","myApi","getCards","handleDeleteClick","removeCard","filter","i","handleAddPlace","obj","addNewCard","closeAllPopups","useEffect","getIt","evt","keyCode","handleCloseClick","parse","document","addEventListener","removeEventListener","Provider","clear","exact","user","about","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","error"],"mappings":"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","file":"static/js/main.425897ee.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo_mesto_white.ff16f24b.svg\";","import React from 'react';\r\nimport { Switch, Route, useHistory } from 'react-router-dom';\r\nimport logo from '../images/logo_mesto_white.svg';\r\n\r\nexport function Header(props) {\r\n  const history = useHistory();\r\n\r\n  return (\r\n    <Switch>\r\n      <Route path='/signup'>\r\n        <header className=\"header\">\r\n          <img src={logo} alt=\"Логотип\" className=\"header__logo\"/>\r\n          <button className=\"header__btn\" onClick={()=>{history.push('/signin')}}>Войти</button>\r\n        </header>\r\n      </Route>\r\n      <Route path='/signin'>\r\n        <header className=\"header\">\r\n          <img src={logo} alt=\"Логотип\" className=\"header__logo\"/>\r\n          <button className=\"header__btn\" onClick={()=>{history.push('/signup')}}>Регистрация</button>\r\n        </header>\r\n      </Route>\r\n      <Route path='/'>\r\n        <header className=\"header\">\r\n          <img src={logo} alt=\"Логотип\" className=\"header__logo\"/>\r\n          <div className=\"header__signout\">\r\n            <p className=\"header__username\">{props.userdata.email}</p>\r\n            <button className=\"header__btn\" onClick={props.onSignOut}>Выйти</button>\r\n          </div>\r\n        </header>\r\n      </Route>\r\n    </Switch>\r\n  )\r\n}\r\n","import React from 'react'\r\n\r\nconst CurrentUserContext = React.createContext('')\r\nexport { CurrentUserContext }\r\n","import React from 'react';\r\nimport {CurrentUserContext} from '../contexts/CurrentUserContext.js'\r\n\r\nexport function Card(props) {\r\n  const currentUser= React.useContext(CurrentUserContext)\r\n  \r\n  function handleClick() {\r\n    props.onSelectCurrentCard(props.card)\r\n  }\r\n\r\n  function handleDeleteClick(){\r\n    props.onDelete()\r\n  }\r\n\r\n  // Создаём переменную, которую после зададим в `className` для кнопки удаления\r\n  const cardDeleteButtonClassName = (\r\n    \"place__trash \" + `${props.card.owner[0] === currentUser._id ? ' ' : ' place__trash_invisible'}`\r\n  ); \r\n\r\n  return (  \r\n    <div>\r\n      <div className=\"place\" onClick={handleClick}>\r\n        <button className={cardDeleteButtonClassName} onClick={handleDeleteClick} aria-label=\"Удалить\"></button>\r\n        <img className=\"place__image\" onClick={props.onSelectCard} src={props.card.link} alt={props.card.name} />\r\n        <div className=\"place__info\">\r\n          <h2 className=\"place__name\">{props.card.name}</h2>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}","import React from 'react'\r\nimport { Card } from \"./Card\";\r\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\r\n\r\nexport function Main (props) {\r\n  const currentUser = React.useContext(CurrentUserContext)\r\n\r\n  return (\r\n    <main className=\"content\">\r\n      <section className=\"profile\">\r\n        <div className=\"profile__img-container\">\r\n          <img  className=\"profile__image\" alt=\"\" id=\"profileImage\"style={{ backgroundImage: `url(${currentUser.avatar})` }}/>\r\n        </div>\r\n        <div className=\"profile__container\">\r\n          <div className=\"profile__button-wrapper\">\r\n            <h1 className=\"profile__title\">{currentUser.name}</h1>\r\n          </div>\r\n          <p className=\"profile__profession\">{currentUser.profession}</p>\r\n        </div>\r\n        <button className=\"profile__add-btn\" onClick={props.onAddPlace} type=\"button\" aria-label=\"Добавить\"></button>\r\n      </section>\r\n      <section className=\"places\">\r\n      {props.cards && props.cards.map((card) => (\r\n              <Card \r\n              key={card._id}\r\n              onSelectCard={props.onSelectCard}\r\n              onSelectCurrentCard={props.onSelectCurrentCard}\r\n              card={card}\r\n              onCardLike = {props.onCardLike}\r\n              onDelete = {props.onDelete}\r\n              />\r\n            ))\r\n          }\r\n      </section>\r\n    </main>\r\n  )\r\n}\r\n","import React from 'react'\r\n\r\nexport function Footer () {\r\n  return (\r\n    <footer className=\"footer\">\r\n      <div className=\"footer__info\">\r\n        <span className=\"footer__copyright\">&copy; 2020 Ильин Владимир Олегович</span>\r\n      </div>\r\n    </footer>\r\n  )\r\n}","export class Api {\n  constructor({url, authorization}) {\n    this._url = url;\n    this._token = authorization;\n    this._headers =  {\n      'authorization': 'Bearer ' + this._token,\n      'Content-Type': 'application/json',\n    }\n  }\n\n  changeToken(token) {\n    this._token = token;\n  }\n  // Приватный метод проверки ответа сервера и преобразование из json\n  _getResponseData(additionalUrl, optionsObj) {\n    return fetch(this._url  + additionalUrl, optionsObj)\n      .then(res => {\n        if (res.ok) {\n          return res.json()\n        }\n        return Promise.reject(`Ошибка: ${res.status}`);\n      })\n  }\n\n  // Метод загрузки информации о пользователе с сервера\n  getUserInfo() {\n    return this._getResponseData('/users/me', { headers: this._headers });\n  }\n\n  // Метод загрузки карточек с сервера\n  getCards() {\n    return this._getResponseData('/cards', { headers: this._headers });\n  }\n\n  // Метод добавления новой карточки на сервер\n  addNewCard(formData) {\n    return this._getResponseData('/cards', {\n      method: 'POST',\n      headers:  this._headers,\n      body: JSON.stringify({\n        name: formData.title,\n        link: formData.place\n      })\n    })\n  }\n\n  // Метод удаления карточки с сервера\n  removeCard(cardId) {\n    return this._getResponseData('/cards/' + cardId, {\n      method: 'DELETE',\n      headers:  this._headers,\n    })\n  }\n}\n","import React from 'react'\r\n\r\nexport function ImagePopup(props) {\r\n\r\n  function handleClose(e){\r\n    if (e.target.classList.contains('popup')) \r\n      props.onClose();\r\n  }\r\n\r\n  if (props.isOpen) { \r\n    return (\r\n      <section className=\"popup popup_img popup_opened\" onClick={e=>handleClose(e)} id=\"popup_img\">\r\n        <figure className=\"popup__img-container\" id=\"img_container\">\r\n          <button className=\"popup__close-icon popup__close-icon_img\" onClick={props.onClose} type=\"button\" aria-label=\"Закрыть\" id=\"imgPopupClose\"></button>\r\n          <img className=\"popup__big-img\" src={props.chosenCard.link} alt=\"loading...\"  name=\"\"/>\r\n          <figcaption className=\"popup__caption\">{props.chosenCard.name}</figcaption>\r\n        </figure>\r\n      </section>\r\n    )}\r\n    return \"\";\r\n}\r\n","import React from 'react'\r\n\r\nexport function PopupWithForm(props) {\r\n  return (\r\n    <section className={\"popup popup_\"+props.name+' popup_opened'} onClick={e=>props.onOverlayClose(e)} >\r\n      <form className={\"popup__container popup__container_\"+props.name} onSubmit={props.onSubmit} method=\"PATCH\" action=\"#\" noValidate>\r\n        <h3 className=\"popup__title\">{props.title}</h3>\r\n        <button className=\"popup__close-icon\" onClick={props.onClose} type=\"button\" aria-label=\"Закрыть\"></button>\r\n        {props.children}\r\n      </form>\r\n    </section>\r\n  )\r\n}\r\n","import React  from 'react'\r\nimport { PopupWithForm } from './PopupWithForm'\r\n\r\nexport function AddPlacePopup(props) {\r\n  const editTitle = React.useRef();\r\n  const editPlace = React.useRef(); \r\n\r\n  function handleSubmit(e) {\r\n    e.preventDefault();\r\n    props.onAddPlace({\r\n      'title':editTitle.current.value,\r\n      'place':editPlace.current.value\r\n    })\r\n  } \r\n\r\n  function handleClose(e) {\r\n    if (e.target.classList.contains('popup')) \r\n      props.onClose()\r\n  }\r\n\r\n  if (props.isOpen) {\r\n    return (\r\n      <PopupWithForm \r\n        name=\"addplace\" \r\n        title=\"Добавить место\" \r\n        onOverlayClose={handleClose}\r\n        onClose={props.onClose}\r\n      >\r\n        <input className=\"popup__text popup__text_name\" ref={editTitle} type=\"text\" required placeholder=\"Название\" minLength=\"1\" maxLength=\"30\"/>\r\n        <span className=\"popup__input_error\"/>\r\n        <input className=\"popup__text popup__text_profession\" ref={editPlace} type=\"url\" required placeholder=\"Ссылка на картинку\"/>\r\n        <span className=\"popup__input_error\"/>\r\n        <button className=\"popup__save popup__save_add\" onClick={e=>handleSubmit(e)} type=\"submit\">Сохранить</button>\r\n      </PopupWithForm>\r\n    )\r\n  }\r\n    return \"\"\r\n}\r\n","import React  from 'react'\r\n\r\nexport function SuggestionPopup(props) {\r\n\r\n  function handleSubmit(e) {\r\n    e.preventDefault();\r\n    props.onDelete(props.selectedCard)\r\n    props.onClose()\r\n  } \r\n\r\n  function handleClose(e) {\r\n    if (e.target.classList.contains('popup')) \r\n      props.onClose();\r\n  }\r\n\r\n  if (props.isOpen) {\r\n    return (\r\n      <section className=\"popup popup_suggestion popup_opened\" onClick={e=>handleClose(e)}>\r\n        <form className=\"popup__container popup__container_suggestion\" method=\"PATCH\" action=\"#\" noValidate>\r\n          <span className=\"popup__input_error\"></span>\r\n          <h3 className=\"popup__title\">Вы уверены?</h3>\r\n          <button className=\"popup__close-icon\" onClick={props.onClose} type=\"button\" aria-label=\"Закрыть\"></button>\r\n          <button className=\"popup__save\" onClick={e=>handleSubmit(e)} type=\"submit\" id=\"agreeBtn\">Да</button>\r\n        </form>\r\n      </section>\r\n    )\r\n  }\r\n    return \"\"\r\n}\r\n","import React from 'react';\r\nimport { Route, Redirect } from \"react-router-dom\";\r\n\r\nconst ProtectedRoute = ({ component: Component, ...props  }) => {\r\n  return (\r\n    <Route>\r\n      {\r\n        () => props.isLogged ? <Component {...props} /> : <Redirect to=\"/signin\" />\r\n      }\r\n    </Route>\r\n)}\r\n\r\nexport default ProtectedRoute; ","// export const BASE_URL = 'https://api.pic.students.nomoredomains.icu';\nexport const BASE_URL = 'http://localhost:4000';\n","import React, { useState } from 'react';\r\nimport * as cardsAuth from '../utils/cardsAuth.js';\r\nimport {BASE_URL} from '../utils/constants.js';\r\nimport {Api} from '../utils/Api.js';\r\n\r\nexport const Login = (props) => {\r\n  const [username,setUsername] = useState('');\r\n  const [password,setPassword] = useState('');\r\n\r\n  function handleUsernameChange(e) {\r\n    setUsername(e.target.value)\r\n  }\r\n\r\n  function handlePasswordChange(e) {\r\n    setPassword(e.target.value)\r\n  }\r\n\r\n  function handleSubmit(e) {\r\n    e.preventDefault();\r\n    if (!username || !password) {\r\n      return\r\n    }\r\n    cardsAuth.authorize(username, password)\r\n    .then((data) => {\r\n      if(!data) {\r\n        props.setMessage('Что-то пошло не так! Попробуйте ещё раз.')\r\n        return \r\n      }\r\n        props.setUserLocalData({'email':username,'password': password})\r\n        localStorage.setItem('userLocalData', JSON.stringify({'email':username,'password': password}))\r\n        props.setMyApi(new Api({'url':BASE_URL, 'authorization':data.jwt}))\r\n        localStorage.setItem('apiData', JSON.stringify({'url':BASE_URL, 'authorization':data.jwt}))\r\n        localStorage.setItem('jwt', data.jwt)\r\n        props.tokenCheck()\r\n    })\r\n    .catch((err) => {\r\n      console.log(err)\r\n    })\r\n  }\r\n\r\n  return (\r\n    <form className=\"entry\" onSubmit={handleSubmit} method=\"POST\" action=\"#\" noValidate>\r\n      <h1 className=\"entry__title\">Вход</h1>\r\n      <input className=\"entry__email\" onChange={handleUsernameChange} required type=\"email\" placeholder=\"Email\"  minLength=\"2\" maxLength=\"40\" pattern=\"[A-Za-zА-Яа-яЁё -]{1,}\"/>\r\n      <input className=\"entry__password\" onChange={handlePasswordChange} required type=\"password\" placeholder=\"Пароль\" minLength=\"2\" maxLength=\"40\" pattern=\"[A-Za-zА-Яа-яЁё -]{1,}\"/>\r\n      <button className=\"entry__submit\" type=\"submit\">Войти</button>\r\n    </form>\r\n  )\r\n}","import { BASE_URL } from '../utils/constants.js';\r\n\r\nexport const register = (email, password) => {\r\n  return fetch(`${BASE_URL}/signup`, {\r\n    method: 'POST',\r\n    headers: {\r\n      'Accept': 'application/json',\r\n      'Content-Type': 'application/json',\r\n    },\r\n    body: JSON.stringify({email, password})\r\n  })\r\n  .then((res) => {\r\n    return res\r\n  })\r\n  .catch((err) => {\r\n    console.log(err)\r\n  })\r\n}\r\n\r\nexport const authorize = (email, password ) => {\r\n  return fetch (`${BASE_URL}/signin`, {\r\n    method: 'POST',\r\n    headers: {\r\n      'Accept': 'application/json',\r\n      'Content-Type': 'application/json',\r\n    },\r\n    body: JSON.stringify( { email, password })\r\n  })\r\n  .then((res) => {\r\n    return res.json()\r\n  })\r\n  .then((data) => {\r\n    localStorage.setItem('jwt', data.token)\r\n    return {jwt:data.token}\r\n  })\r\n  .catch((err) => {\r\n    console.log(err)\r\n  })\r\n}\r\n\r\nexport const getContent = (token) => {\r\n  if (localStorage.getItem('jwt'))\r\n  {\r\n    return fetch (`${BASE_URL}/users/me`, {\r\n    method: 'GET',\r\n    headers: {\r\n      'Accept': 'application/json',\r\n      \"Content-Type\": \"application/json\",\r\n      \"authorization\": `Bearer ${token}`\r\n    }\r\n  })\r\n    .then((res)=> {return res.json()})\r\n    .then(data => {\r\n      return data.user\r\n    })\r\n    .catch((err) => {\r\n      console.log(err)\r\n    })\r\n  } else {\r\n    console.log(\"Token не найден\")\r\n  }\r\n}","import React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport * as cardsAuth from '../utils/cardsAuth.js';\r\n\r\nexport function Register(props) {\r\n  const [email,setEmail] = useState('');\r\n  const [password,setPassword] = useState('');\r\n\r\n  function handleEmailChange(e) {\r\n    setEmail(e.target.value)\r\n  }\r\n\r\n  function handlePasswordChange(e) {\r\n    setPassword(e.target.value)\r\n  }\r\n  \r\n  function handleSubmit(e) {\r\n    e.preventDefault()\r\n    cardsAuth.register(email, password)\r\n      .then((res)=> {\r\n        if (res.status !== 400) {\r\n          props.setMessage('Вы успешно зарегистрировались!')\r\n          props.setInfoTooltipOpen(true)\r\n        } else {\r\n          props.setMessage('Что-то пошло не так! Попробуйте ещё раз.')\r\n          props.setInfoTooltipOpen(true)\r\n        }\r\n      })\r\n  }\r\n  \r\n  return (\r\n    <form className=\"entry\" onSubmit={handleSubmit} method=\"POST\" noValidate >\r\n      <h1 className=\"entry__title\">Регистрация</h1>\r\n      <input className=\"entry__email\" onChange={handleEmailChange} type=\"email\" required placeholder=\"Email\" minLength=\"2\" maxLength=\"40\" pattern=\"[A-Za-zА-Яа-яЁё -]{1,}\"/>\r\n      <input className=\"entry__password\" onChange={handlePasswordChange} type=\"password\" required placeholder=\"Пароль\" minLength=\"2\" maxLength=\"40\" pattern=\"[A-Za-zА-Яа-яЁё -]{1,}\"/>\r\n      <button className=\"entry__submit\" type=\"submit\" >Зарегистрироваться</button>\r\n      <span className=\"entry__sign-in\">Уже зарегистрированы?<Link to=\"/signin\" className=\"entry__link\">Войти</Link></span>\r\n    </form>\r\n  )\r\n}","export default __webpack_public_path__ + \"static/media/success.48613875.svg\";","export default __webpack_public_path__ + \"static/media/fail.8144d973.svg\";","import React from 'react';\r\nimport success from '../images/success.svg';\r\nimport fail from '../images/fail.svg'\r\n\r\nexport function InfoTooltip(props) {\r\n  let image = fail\r\n  if (props.message !== \"Что-то пошло не так! Попробуйте ещё раз.\") {\r\n    image = success\r\n  }\r\n\r\n  if (props.infoTooltipOpen) {\r\n    return (\r\n      <section className=\"popup popup_opened\" onClick={props.closeinfoTooltip}>\r\n        <div className=\"popup__container  popup__infoTooltip\">\r\n          <button className=\"popup__close-icon\" onClick={props.closeinfoTooltip} type=\"button\" aria-label=\"Закрыть\"></button>\r\n          <img className=\"popup__infoTooltip_image\" alt={props.message} src={image}/>\r\n          <p className=\"popup__infoTooltip_title\">{props.message}</p>\r\n        </div>\r\n      </section>\r\n    )} else {\r\n      return \"\"\r\n    }\r\n}\r\n","\nimport React, { useState, useEffect } from 'react';\nimport { Route, Switch, Redirect, useHistory } from 'react-router-dom';\nimport '../index.css';\nimport { Header } from \"./Header\";\nimport { Main } from \"./Main.js\";\nimport { Footer } from \"./Footer.js\";\nimport { Api } from '../utils/Api';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext.js';\nimport { ImagePopup } from \"./ImagePopup\";\nimport { AddPlacePopup } from './AddPlacePopup';\nimport { SuggestionPopup } from './SuggestionPopup';\nimport ProtectedRoute from './ProtectedRoute'; \nimport { Login } from \"./Login\";\nimport { Register } from \"./Register\";\nimport * as cardsAuth from '../utils/cardsAuth.js';\nimport { InfoTooltip } from './InfoTooltip';\nimport { BASE_URL } from '../utils/constants';\n\nfunction App() {\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = useState(false)\n  const [isImagePopupOpen, setIsImagePopupOpen] = useState(false)\n  const [selectedCard, setSelectedCard] = useState(null)\n  const [isSuggestionOpen, setSuggestionOpen] = useState(false)\n  const [currentUser, setCurrentUser] = useState({ 'name':'', 'profession':'', '_id': '' ,'avatar': \"\"});\n  const [cards, setCards] = useState([])\n  const [isLogged, setLogged] = useState(false)\n  const [userData, setUserData] = useState({email: \"\", password: \"\"})\n  const [infoTooltipOpen, setInfoTooltipOpen] = useState(false)\n  const [message, setMessage] = useState('');\n  const [userLocalData, setUserLocalData] = useState({email: \"\", password: \"\"});\n  const [token, setToken] = useState(\"\")\n  const [isRefreshed, setIsRefreshed] = useState(true)\n  const [myApi, setMyApi] = useState(new Api({\n    'url': BASE_URL, 'authorization': localStorage.getItem('jwt')\n  }))\n  const ESC_KEYCODE = 27;\n  const history = useHistory();\n\n  function getCards(){\n    myApi.getCards()\n    .then((res)=> {\n      if (res)\n        setCards(res.cards)\n    }\n    )\n    .catch((err)=>{\n      console.log(err)\n    });\n  }\n\n  function handleSignOut() {\n    localStorage.clear()\n    setMyApi(new Api({\n      'url': BASE_URL, 'authorization': \"\"\n    }))\n    setCurrentUser({ 'name':'', 'profession':'', '_id': '' ,'avatar': \"\"})\n    setUserLocalData({email: \"\", password: \"\"})\n    setToken(\"\")\n    setLogged(false)\n    history.push('/signin')\n  }\n\n  const tokenCheck = () => {\n    if(localStorage.getItem('jwt')) {\n      cardsAuth.getContent(localStorage.getItem('jwt'))\n        .then((res) => {\n        if (res) {\n          if (res.email) {\n              setUserData({\n                email: res.email,\n                _id: res._id\n              })\n              setCurrentUser({ 'name':res.name, 'profession':res.about, '_id': res._id, 'avatar': res.avatar })\n              localStorage.setItem(\"CurrentUser\", JSON.stringify({ 'name':res.name, 'profession':res.about, '_id': res._id, 'avatar': res.avatar }))\n              localStorage.setItem('isLogged', true)\n              localStorage.setItem(\"UserData\", JSON.stringify({email: res.email, password: res._id}))\n              setLogged(true)\n              history.push('/')\n          }\n        } else {\n            setMessage('Что-то пошло не так! Попробуйте ещё раз.')\n            setInfoTooltipOpen(true)\n          }\n        })\n    }\n  }\n  \n  function handleDeleteClick(card){\n    myApi.getCards().then((res)=> {\n        if (res)\n        {\n          setCards(res.cards)\n          const isOwner = card.owner[0] === currentUser._id;\n          if (isOwner) {\n            myApi.removeCard(card._id);\n            setCards(cards.filter(i=>i._id !== card._id))\n          };\n        }\n      })\n      .catch(err => console.log(err));\n  }\n\n  function handleAddPlace(obj) {\n    myApi.addNewCard(obj).then(res=> {  \n      myApi.getCards()\n        .then((res)=> {\n          if (res)\n          setCards(res.cards)\n        })\n        .catch(err => console.log(err));\n    closeAllPopups();\n    })\n  }\n\n  useEffect(()=> {\n    if (isRefreshed)\n    {\n      if (localStorage.getItem(\"isLogged\") != null) setLogged(localStorage.getItem(\"isLogged\") === 'true')\n      if (localStorage.getItem(\"CurrentUser\") != null){\n        setCurrentUser(JSON.parse(localStorage.getItem(\"CurrentUser\")))\n      } \n      if (localStorage.getItem(\"UserData\") != null) setUserData(JSON.parse(localStorage.getItem(\"UserData\")))\n      if (localStorage.getItem(\"userLocalData\") != null) setUserLocalData(JSON.parse(localStorage.getItem(\"userLocalData\")))\n      if (localStorage.getItem('jwt') != null) setToken(localStorage.getItem('jwt'))\n      if (localStorage.getItem('apiData') != null) setMyApi(new Api(JSON.parse(localStorage.getItem('apiData'))))\n      if (localStorage.getItem(\"isLogged\") === 'true' && localStorage.getItem('jwt') !== \"\"){\n            getCards()\n      }\n      setIsRefreshed(false)\n      function getIt(evt){\n        handleCloseClick(evt)\n      }\n      document.addEventListener(\"keydown\", (evt)=>{\n        if(evt.keyCode === ESC_KEYCODE)getIt(evt)\n      })\n      return ()=>{\n        document.removeEventListener(\"keydown\", (evt)=>{getIt(evt)})\n      }\n    }\n  },)\n\n  function handleDeleteButton() {\n    closeAllPopups()\n    setSuggestionOpen(true)\n  }\n\n  function handleCardSetCurrent(card) {\n    setSelectedCard(card)\n  }\n\n  function handleCardClick(card) {\n    setSelectedCard(card)\n    setIsImagePopupOpen(true)\n  }\n\n  function handleAddPlaceClick() {\n    closeAllPopups()\n    setIsAddPlacePopupOpen(true)\n  }\n\n  function closeAllPopups() {\n    setIsAddPlacePopupOpen(false)\n    setIsImagePopupOpen(false)\n    setSuggestionOpen(false)\n  }\n\n  function handleCloseClick (evt) {\n    evt.preventDefault()\n    if (evt.keyCode === ESC_KEYCODE || evt.target.classList.contains('popup') || evt.target.classList.contains('popup__save') || evt.target.classList.contains('popup__close-icon'))\n      {closeAllPopups();}\n  }\n\n  function closeinfoTooltip() {\n    setInfoTooltipOpen(false)\n  }\n\n  return (\n    <CurrentUserContext.Provider value={currentUser}>\n      <div className=\"App\">\n        <div className=\"page\">\n          <Header onSignOut={handleSignOut} userdata={userData}/>\n          <Switch>\n            <ProtectedRoute exact path=\"/\" component={Main} \n              isLogged={localStorage.getItem(\"isLogged\")}\n              isAddPlacePopupOpen={isAddPlacePopupOpen}\n              isSuggestionOpen={isSuggestionOpen}\n              onDelete={handleDeleteButton}\n              onAddPlace={handleAddPlaceClick}\n              onSelectCard={handleCardClick}\n              onSelectCurrentCard={handleCardSetCurrent}\n              setCards={setCards}\n              cards={cards}\n              isImagePopupOpen={isImagePopupOpen}\n              getCards={getCards}\n            />\n            <Route exact path=\"/signup\">\n              <Register setInfoTooltipOpen={setInfoTooltipOpen} setMessage={setMessage}/>\n            </Route>\n            <ProtectedRoute  component={Login}  exact path=\"/signin\"\n                isLogged={!localStorage.getItem(\"isLogged\")}\n                setMyApi={setMyApi}\n                setUserLocalData={setUserLocalData} \n                setInfoTooltipOpen={setInfoTooltipOpen} \n                tokenCheck={tokenCheck} \n                setMessage={setMessage}\n            />\n            <Route>\n              {localStorage.getItem(\"isLogged\") ? <Redirect to=\"/\" /> : <Redirect to=\"/signin\" />}\n            </Route>\n          </Switch>\n          <AddPlacePopup\n            isOpen={isAddPlacePopupOpen} \n            onClose={closeAllPopups} \n            onAddPlace={handleAddPlace}\n            onSubmit={handleAddPlace}\n          />\n          <SuggestionPopup \n            isOpen={isSuggestionOpen} \n            onClose={closeAllPopups}\n            selectedCard={selectedCard}\n            onDelete={handleDeleteClick} \n            onSubmit={handleDeleteClick}\n          >\n          </SuggestionPopup>\n          <InfoTooltip \n          infoTooltipOpen={infoTooltipOpen}\n          message={message} \n          closeinfoTooltip={closeinfoTooltip}>\n          </InfoTooltip>\n          <ImagePopup \n            chosenCard={selectedCard}\n            onClose={closeAllPopups}\n            isOpen={isImagePopupOpen} \n          />\n          <Footer/>\n        </div>\n      </div>\n    </CurrentUserContext.Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport './index.css';\nimport App from './components/app.js';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}